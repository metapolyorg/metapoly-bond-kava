{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xbf1cc5a826442214004ccd6ac65424470cf3167265766a15066d14edbfdf53da"
  },
  "proxies": [
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xa43977221862d6fec127c6e07c384a1e3f15caf7920e893a25d7fd90fe4e88aa",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0x8d12b03ef95f8d4fdd3905cde98fb83af978c0477e60edab65d7152f7759357c",
      "kind": "transparent"
    },
    {
      "address": "0xD84379CEae14AA33C123Af12424A37803F885889",
      "txHash": "0xa7b68f68569ab349fb50f6cba83571a588c20993002855772d0e3bb2ef914082",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x1d6f50d74f2bb580c1c01548b15a2ba9588f4202b0a29e363fd7f82b9704a75b",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0x17fa1e1d56f3d5293df3029840f7401143955c94d3e8013a04f158f9854f0aa7",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0x0384ffbe7bcf4f2dc881dc3dc0778077ff8ca7c711ad3a4708bbe62cbecbd443",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0x3a340b144f6dc2723c4c02610c2b653ede4e84f3cb32e6a2a85934db58a99646",
      "kind": "transparent"
    },
    {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0xed13ebff4f330e055f904c28f4e956fa3f209b982a7602317bed70e88f529557",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0xdd4b64fe563bba452117dbc5b89df3da17a103a589388f78208d84cd2b75af45",
      "kind": "transparent"
    },
    {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0x9db6854e94fce4ffd55a141bc414a14175da5de70c4bf23705505d5098a91d3a",
      "kind": "transparent"
    },
    {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0xdee578df35a2ce939201d4633f6fde6582b840ec4ffd78e93b65a4fd70d77740",
      "kind": "transparent"
    },
    {
      "address": "0x413b1AfCa96a3df5A686d8BFBF93d30688a7f7D9",
      "txHash": "0xcdf4f17c995be369fe1c9115191da94b4ca8958cd8a5ef26f09eb16934ce0ea4",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xbc98b5f452975d10d143f0e8b4eee95b69ed2f5763d19b3b58db1073091e6564",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x6c8029fdd8b91f8ca3b88873e2916054f24f90bd0a87f05e9b3f1a3810dae50e",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x5403c08c52cf5a8883c771e286847dbf86b07bd3db7fc67f1b3d71f927869ac0",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0xc113532d2493abcd1c0653ec38080d0959823e90a78176d97878ebe70feb7311",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x860c1e86387713d84177b3423599d20e8f20be0eb5715bc39e5eb809cf526cd6",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0x7714e75f90b9816b49bc9f080e7da18527c1c70c254986e480e8958eef5b754d",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0xb74235aa2168e01784f61ebacb98d79a5091356ee63ad77082cc0a64c8a1a413",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0x08f65436a1750ba57d71018af6c96694e17d7d674fefe1dfa266c00d4aeb10e9",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0xbbcff5fa60520e7cb321a5bacc32f120ea2d109c49966e50205ac403f73d9e57",
      "kind": "transparent"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x877a465c2329150c61769007eafe8975b3528c4f191a249c7115a0de884f81ab",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0x7ea2d1eaf3d82c8d1aa21914c38e82d197ae79ce5d64560954163519d107fce2",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0x7ed537d5fa9ddfd8449990e81e1da6617330409fc5c910fba1aec7cb326383f3",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0xc6c1f676227542c46241d473462022dceea3903b736561414e45ef9797619169",
      "kind": "transparent"
    },
    {
      "address": "0x720472c8ce72c2A2D711333e064ABD3E6BbEAdd3",
      "txHash": "0x56630d8da55f0e86d2bb6a15d4dc15afcdfeb1413cc1d3721c43fa91c60bf0e6",
      "kind": "transparent"
    },
    {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0xf766da1af0b76da982a94f01afb4a85d8f5dd7ec25672068de411fe8778f0d35",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0x3e243d91021246712d3fdf8aa7e478be0aeff355fefbd0cfb67d65e4516d1c80",
      "kind": "transparent"
    },
    {
      "address": "0xD49a0e9A4CD5979aE36840f542D2d7f02C4817Be",
      "txHash": "0x8773afc3587aa0370f24cfe1c7a69c0118693c7d1116c0141896e5b41299f983",
      "kind": "transparent"
    },
    {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0x259b783ddec9562e2734cf032310bda4a498302763cc5dd7bb0077d9d44f1d68",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xbb44a95fe1fc8fd4063592f9cbd0bff9ef14111f84e85633f42b5e6f9e95e4ca",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xfc25bcd1d6f5f35b938a855f12e35521676b601c36531de0b9e6afa35881152d",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x8c4817c16daa8a28074513649e454430d1219e6fe73ccdb1cdf919563d43eb62",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x2be02cb1339ebdbc39cb64397f485003db38ea55045f4820b64bbce4578ba725",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cc450aafe338f198193d6d24359861514ad07e703399f39d66531b02ec179a56": {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x7a5ab2d9a24cd0383899be894423372746361b68ec6cae6ad9ea3a8da4a23d64",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "decimal",
            "offset": 0,
            "slot": "151",
            "type": "t_uint8",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34c6dfe347ef436f79d9373375ecd5f3a72b5e267059a3b1ecfabc7bce54cd33": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xa7e62a2cf6ba466c71aa6d4b7b8d3292c73a0b28c601a6d07e538b1c58a6e87c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "D33D",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ID33D)4917",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:34"
          },
          {
            "label": "reserveTokens",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:36"
          },
          {
            "label": "isReserveToken",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:37"
          },
          {
            "label": "reserveDepositors",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:39"
          },
          {
            "label": "isReserveDepositor",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:40"
          },
          {
            "label": "reserveSpenders",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:42"
          },
          {
            "label": "isReserveSpender",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:43"
          },
          {
            "label": "liquidityTokens",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:45"
          },
          {
            "label": "isLiquidityToken",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:46"
          },
          {
            "label": "liquidityDepositors",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:48"
          },
          {
            "label": "isLiquidityDepositor",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:49"
          },
          {
            "label": "bondCalculator",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:51"
          },
          {
            "label": "reserveManagers",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:53"
          },
          {
            "label": "isReserveManager",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:54"
          },
          {
            "label": "liquidityManagers",
            "offset": 0,
            "slot": "115",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:56"
          },
          {
            "label": "isLiquidityManager",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:57"
          },
          {
            "label": "rewardManagers",
            "offset": 0,
            "slot": "117",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:59"
          },
          {
            "label": "isRewardManager",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:60"
          },
          {
            "label": "supportedNFTs",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:62"
          },
          {
            "label": "isSupportedNFT",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:63"
          },
          {
            "label": "nftDepositors",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:65"
          },
          {
            "label": "isNFTDepositor",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:66"
          },
          {
            "label": "totalReserves",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:68"
          },
          {
            "label": "D33DPrice",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ID33D)4917": {
            "label": "contract ID33D",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7d613eca86264a160e316f964ad6ac5352fbda4226dd97e5d5d4765bb0f13a56": {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x629ce6ee06072bf89069808dfbaf3f48be25f4dc1845f24425833d5b5e23f4b7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "NFT",
            "src": "contracts/NFT.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "98549278b668d2585e60afd2c5fc9c7b13aaa3e0c7239553553bae150278ac96": {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x745aecea05e048ccc0ac8ea6776da8082320a93a36c9873eb15e79e1a9ba55e2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:11"
          },
          {
            "label": "feeOn",
            "offset": 20,
            "slot": "201",
            "type": "t_bool",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:12"
          },
          {
            "label": "taxPerc",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:13"
          },
          {
            "label": "isDex",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:15"
          },
          {
            "label": "isExcluded",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:16"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:18"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:19"
          },
          {
            "label": "isSellTaxed",
            "offset": 0,
            "slot": "207",
            "type": "t_bool",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:21"
          },
          {
            "label": "isBuyTaxed",
            "offset": 1,
            "slot": "207",
            "type": "t_bool",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:22"
          },
          {
            "label": "locked",
            "offset": 2,
            "slot": "207",
            "type": "t_bool",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:23"
          },
          {
            "label": "taxReceiver",
            "offset": 3,
            "slot": "207",
            "type": "t_address",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:24"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "D33DImplementation",
            "src": "contracts/D33D.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a735422c9d2967044039dfe02e2c98db42735576999ccfd26ea345ef0cc061a6": {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0xba6e1f195e261f7f9673a89dd4a56fc3ef60ba445952c8408ce52a3f1123a597",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isAuthorised",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VD33D",
            "src": "contracts/stake/vD33D.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "218d57cbc980e1b3e776dabd52e785e4f8ef1d9bec06180b33e20e5cd1df7b1a": {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0x87452848e98209bcd70bc99b4cff60200e48a6b62290caed4f9c26bf5c53fff2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "D33D",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)888",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:42"
          },
          {
            "label": "USM",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)888",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:43"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IStakingToken)8799",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:44"
          },
          {
            "label": "stakingWarmUp",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IStakingWarmUp)8807",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:45"
          },
          {
            "label": "usmMinter",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IUSMMinter)8830",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:46"
          },
          {
            "label": "vD33D",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IVD33D)8845",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:47"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:49"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:50"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "109",
            "type": "t_struct(Epoch)8897_storage",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:66"
          },
          {
            "label": "warmupInfo",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_struct(Claim)8888_storage)",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:68"
          },
          {
            "label": "DAO",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:69"
          },
          {
            "label": "USMClaimLimit",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/stake/Staking.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)888": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingToken)8799": {
            "label": "contract IStakingToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingWarmUp)8807": {
            "label": "contract IStakingWarmUp",
            "numberOfBytes": "20"
          },
          "t_contract(IUSMMinter)8830": {
            "label": "contract IUSMMinter",
            "numberOfBytes": "20"
          },
          "t_contract(IVD33D)8845": {
            "label": "contract IVD33D",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Claim)8888_storage)": {
            "label": "mapping(address => struct Staking.Claim)",
            "numberOfBytes": "32"
          },
          "t_struct(Claim)8888_storage": {
            "label": "struct Staking.Claim",
            "members": [
              {
                "label": "deposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gons",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Epoch)8897_storage": {
            "label": "struct Staking.Epoch",
            "members": [
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "number",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "distribute",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b95b1092a3e29d30a03f08c92ea732710373dbcc4a1b014da200710b87564290": {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0xc988f4e3bdb51e51610b4b6e1047754aa9f4426bf63ff9c2c5b763da2144e563",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "stakingContract",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:10"
          },
          {
            "label": "rebases",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_struct(Rebase)9562_storage)dyn_storage",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:21"
          },
          {
            "label": "INDEX",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:23"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:25"
          },
          {
            "label": "_gonsPerFragment",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:37"
          },
          {
            "label": "_gonBalances",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:38"
          },
          {
            "label": "_allowedValue",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "StakingToken",
            "src": "contracts/stake/StakingToken.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Rebase)9562_storage)dyn_storage": {
            "label": "struct StakingToken.Rebase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Rebase)9562_storage": {
            "label": "struct StakingToken.Rebase",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rebase",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalStakedBefore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStakedAfter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountRebased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberOccured",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d847399777117db583cf5f5e2368944dd4c3c70f39846b0b727d4b2c21ef59e3": {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0xb3ea53970267253d9c2b39531a716708c54f44b5e22a0ab79322e9e6d6aa80d6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "D33D",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)888",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:19"
          },
          {
            "label": "Treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ITreasury)4384",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:20"
          },
          {
            "label": "epochLength",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:22"
          },
          {
            "label": "nextEpochTimestamp",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:23"
          },
          {
            "label": "info",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_struct(Info)4419_storage)dyn_storage",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:31"
          },
          {
            "label": "adjustments",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(Adjust)4430_storage)",
            "contract": "Distributor",
            "src": "contracts/Distributor.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Info)4419_storage)dyn_storage": {
            "label": "struct Distributor.Info[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)888": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ITreasury)4384": {
            "label": "contract ITreasury",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(Adjust)4430_storage)": {
            "label": "mapping(uint256 => struct Distributor.Adjust)",
            "numberOfBytes": "32"
          },
          "t_struct(Adjust)4430_storage": {
            "label": "struct Distributor.Adjust",
            "members": [
              {
                "label": "add",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "target",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Info)4419_storage": {
            "label": "struct Distributor.Info",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingToken",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0cfc0ad9973ba431471a84979ddf9c0ad44f7ac9efbbd7806b69b3b05634fe67": {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0xbb661ff67ac266d2d547cae9adf2ada34d9dadbe4927e56de618b7d59e42a6c5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakingContract",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingWarmup",
            "src": "contracts/stake/StakingWarmup.sol:16"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_address)",
            "contract": "StakingWarmup",
            "src": "contracts/stake/StakingWarmup.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fd168da7a9dcc08d469063f6176948f0efc1d0993c9505c1dc1d90e9ea5ed2cc": {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0xf6f8b67ee8ca4a6a53cb3d5c9cd181e3f32e2c23c0fdda29168be305b4e2a1a4",
      "layout": {
        "storage": [
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "BaseRelayRecipient",
            "src": "libs/BaseRelayRecipient.sol:38"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "USM",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10337",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:27"
          },
          {
            "label": "DVD",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)10337",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:28"
          },
          {
            "label": "D33D",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IERC20)10337",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:29"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IERC20)10337",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:30"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IERC20)10337",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:33"
          },
          {
            "label": "routers",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_contract(IERC20)10337,t_contract(IUniswapRouter)6650)",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:35"
          },
          {
            "label": "allowedContract",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:37"
          },
          {
            "label": "mintFeeBasisPoints",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:40"
          },
          {
            "label": "lastMintTimestamp",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:41"
          },
          {
            "label": "mintRate",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:42"
          },
          {
            "label": "mintBufferMax",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:43"
          },
          {
            "label": "mintBuffer",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:44"
          },
          {
            "label": "mintAmountMax",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10337": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapRouter)6650": {
            "label": "contract IUniswapRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20)10337,t_contract(IUniswapRouter)6650)": {
            "label": "mapping(contract IERC20 => contract IUniswapRouter)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1aac95e2e179b95173fcd36f35cedb0b525e2f4a43885a0a74b802f8bdd53167": {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x1b48303349f9378954d48f7a9efb02fd0ddd8db9622ed62865b786c5a48f2ec3",
      "layout": {
        "storage": [
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "BaseRelayRecipient",
            "src": "libs/BaseRelayRecipient.sol:38"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "USM",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10325",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:27"
          },
          {
            "label": "DVD",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)10325",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:28"
          },
          {
            "label": "D33D",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IERC20)10325",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:29"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IERC20)10325",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:30"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IERC20)10325",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:31"
          },
          {
            "label": "routers",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_contract(IERC20)10325,t_contract(IUniswapRouter)6648)",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:33"
          },
          {
            "label": "allowedContract",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:35"
          },
          {
            "label": "mintFeeBasisPoints",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:38"
          },
          {
            "label": "lastMintTimestamp",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:39"
          },
          {
            "label": "mintRate",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:40"
          },
          {
            "label": "mintBufferMax",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:41"
          },
          {
            "label": "mintBuffer",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:42"
          },
          {
            "label": "mintAmountMax",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "USMMinter",
            "src": "contracts/USMMinter.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10325": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapRouter)6648": {
            "label": "contract IUniswapRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20)10325,t_contract(IUniswapRouter)6648)": {
            "label": "mapping(contract IERC20 => contract IUniswapRouter)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "12207a428e0a871f0ffc5048657619f1e54c49200dc9a4e6860dea657fe68e41": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x570d16ca2aa968cda4efe2c0af306e5bb2eb332b8f291fdee5813d6396f3939a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "D33D",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20Upgradeable)888",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:32"
          },
          {
            "label": "principle",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPrinciple)7512",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:33"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ITreasury)7550",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:34"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStaking)7522",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:35"
          },
          {
            "label": "DAO",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:36"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:37"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:38"
          },
          {
            "label": "isLiquidityBond",
            "offset": 20,
            "slot": "6",
            "type": "t_bool",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:40"
          },
          {
            "label": "bondCalc",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IBondCalc)7556",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:41"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:43"
          },
          {
            "label": "lastDecay",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:44"
          },
          {
            "label": "terms",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(Terms)7606_storage",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:54"
          },
          {
            "label": "bondInfo",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_struct(Bond)7618_storage)",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:63"
          },
          {
            "label": "adjustment",
            "offset": 0,
            "slot": "17",
            "type": "t_struct(Adjust)7634_storage",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "22",
            "type": "t_array(t_uint256)36_storage",
            "contract": "BondContract",
            "src": "contracts/bond/BondContract.sol:433"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)36_storage": {
            "label": "uint256[36]",
            "numberOfBytes": "1152"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBondCalc)7556": {
            "label": "contract IBondCalc",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)888": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPrinciple)7512": {
            "label": "contract IPrinciple",
            "numberOfBytes": "20"
          },
          "t_contract(IStaking)7522": {
            "label": "contract IStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ITreasury)7550": {
            "label": "contract ITreasury",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Bond)7618_storage)": {
            "label": "mapping(address => struct BondContract.Bond)",
            "numberOfBytes": "32"
          },
          "t_struct(Adjust)7634_storage": {
            "label": "struct BondContract.Adjust",
            "members": [
              {
                "label": "add",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "target",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "buffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bond)7618_storage": {
            "label": "struct BondContract.Bond",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pricePaid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Terms)7606_storage": {
            "label": "struct BondContract.Terms",
            "members": [
              {
                "label": "controlVariable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingTerm",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minimumPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPayout",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
